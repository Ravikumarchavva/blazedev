generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  name          String?
  email         String?   @unique
  emailVerified DateTime? @map("email_verified")
  image         String?
  role           Role? @default(USER)
  bio            String? @default("")
  password       String?
  accounts      Account[]
 
  @@map("users")
}
 
model Account {
  id                 String  @id @default(auto()) @map("_id") @db.ObjectId
  userId             String  @map("user_id") @db.ObjectId
  type               String
  provider           String
  providerAccountId  String  @map("provider_account_id")
  refresh_token      String? @db.String
  access_token       String? @db.String
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String? @db.String
  session_state      String?
 
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
 
  @@unique([provider, providerAccountId])
  @@map("accounts")
}
model VerificationToken{
  id       String  @id @default(auto()) @map("_id") @db.ObjectId
  email    String 
  token    String @unique
  expires  DateTime
  @@unique([email,token])
}
model PasswordResetToken{
  id       String  @id @default(auto()) @map("_id") @db.ObjectId
  email    String 
  token    String @unique
  expires  DateTime
  @@unique([email,token])
}
enum Role {
  USER
  ADMIN
}
model Project {
  id             String    @id @default(auto()) @map("_id") @db.ObjectId
  title          String
  description    String
  date           DateTime
  image          String
  comingSoon     Boolean
  url            String?   // Optional URL field
  mlopsBased     Boolean?  // Indicates if the project involves MLOps
  signInRequired Boolean?  // Indicates if sign-in is required
  requestLimit   Int?      // Request limit for signed-in users
  blogPresent    Boolean   // Indicates if a related blog is available
  blogLink       String?   // URL of the related blog (if blogPresent is true)

  @@map("projects")
}
model Blog {
  id                String   @id @default(auto()) @map("_id") @db.ObjectId
  title             String
  description       String
  content           String
  url               String
  expectedReadingTime String
  imageUrl          String
  projectLink       String? // URL of the related project (if any)

  @@map("blogs")
}
